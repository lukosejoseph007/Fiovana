name: CI/CD Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

permissions:
  contents: write

env:
  CARGO_TERM_COLOR: always
  # Set consistent environment for tests
  PROXEMIC_ENV: development
  RUST_ENV: test
  # Ensure debug mode for tests
  PROXEMIC_DEBUG: true
  PROXEMIC_SECURITY_LEVEL: development
  # Mock user directories for headless CI
  HOME: /tmp/mock_home

jobs:
  test-rust:
    name: Test Rust Backend
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up mock user directories
        run: |
          mkdir -p /tmp/mock_home/Desktop
          mkdir -p /tmp/mock_home/Documents
          mkdir -p /tmp/mock_home/Downloads
          # Set XDG directories that the dirs crate looks for
          echo "XDG_DESKTOP_DIR=/tmp/mock_home/Desktop" >> $GITHUB_ENV
          echo "XDG_DOCUMENTS_DIR=/tmp/mock_home/Documents" >> $GITHUB_ENV
          echo "XDG_DOWNLOAD_DIR=/tmp/mock_home/Downloads" >> $GITHUB_ENV

      - name: Install Tauri dependencies (Linux)
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libgtk-3-dev \
            libwebkit2gtk-4.1-dev \
            libayatana-appindicator3-dev \
            librsvg2-dev \
            patchelf

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt, clippy

      - name: Rust Cache
        uses: Swatinem/rust-cache@v2
        with:
          workspaces: src-tauri

      - name: Debug environment
        run: |
          echo "PWD: $PWD"
          echo "HOME: $HOME"
          echo "PROXEMIC_ENV: $PROXEMIC_ENV"
          echo "RUST_ENV: $RUST_ENV"
          echo "XDG_DESKTOP_DIR: $XDG_DESKTOP_DIR"
          echo "XDG_DOCUMENTS_DIR: $XDG_DOCUMENTS_DIR"
          echo "XDG_DOWNLOAD_DIR: $XDG_DOWNLOAD_DIR"
        working-directory: src-tauri

      - name: Check formatting
        run: cargo fmt --all -- --check
        working-directory: src-tauri

      - name: Run Clippy
        run: cargo clippy -- -D warnings
        working-directory: src-tauri

      - name: Run tests
        run: cargo test
        working-directory: src-tauri
        env:
          # Additional test-specific environment variables
          PROXEMIC_ENV: development
          RUST_ENV: test
          PROXEMIC_SECURITY_LEVEL: development
          PROXEMIC_DEBUG: true

  test-frontend:
    name: Test Frontend
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run linting
        run: npm run lint

      - name: Check formatting
        run: npm run format:check

      - name: Run tests
        run: npm run test -- --passWithNoTests

      - name: Build frontend
        run: npm run build

  build-tauri:
    name: Build Tauri App
    needs: [test-rust, test-frontend]
    strategy:
      matrix:
        platform: [macos-latest, ubuntu-latest, windows-latest]

    runs-on: ${{ matrix.platform }}

    steps:
      - uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Rust Cache
        uses: Swatinem/rust-cache@v2

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install frontend dependencies
        run: npm ci

      - name: Install Tauri dependencies (Ubuntu)
        if: matrix.platform == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libgtk-3-dev \
            libwebkit2gtk-4.1-dev \
            libayatana-appindicator3-dev \
            librsvg2-dev \
            patchelf

      - name: Build Tauri app
        run: npm run tauri build
